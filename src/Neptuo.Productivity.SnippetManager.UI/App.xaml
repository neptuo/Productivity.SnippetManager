<Application x:Class="Neptuo.Productivity.SnippetManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:nc="clr-namespace:Neptuo.Windows.Converters;assembly=Neptuo.Windows.Converters"
             ShutdownMode="OnExplicitShutdown">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Views/Themes/Dark.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <nc:BoolConverter x:Key="TrueToVisibleConverter" TrueValue="Visible" FalseValue="Collapsed" />
            <nc:BoolConverter x:Key="ActiveBorderConverter" TrueValue="{StaticResource ActiveBrush}" FalseValue="{StaticResource InactiveBrush}" />

            <Style x:Key="FontIconStyle" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="Padding" Value="4" />
                <Setter Property="Margin" Value="4,0,0,0" />
            </Style>
            <Style x:Key="PlainButtonStyle" TargetType="Button">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="VerticalContentAlignment" Value="Bottom" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style TargetType="ToolTip">
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Padding" Value="2,6" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="CaretBrush" Value="{DynamicResource ForegroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>

            <Style x:Key="WindowBorderStyle" TargetType="Border">
                <Setter Property="BorderBrush" Value="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Converter={StaticResource ActiveBorderConverter}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="0,10" />
            </Style>
            <Style TargetType="ComboBox">
                <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}" />
            </Style>

            <Style TargetType="ListView">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" IsEnabled="{TemplateBinding IsEnabled}" SnapsToDevicePixels="true">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource HoverBrush}" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource ActiveBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TabControl">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0,1,0,0" />
                <Setter Property="BorderBrush" Value="{DynamicResource ActiveBrush}" />
                <Setter Property="Padding" Value="8" />
            </Style>
            <Style TargetType="TabItem">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                <Setter Property="Padding" Value="12,6" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <ContentPresenter x:Name="ContentSite" ContentSource="Header" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource ForegroundBrush}"/>
                                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource ActiveBrush}"/>
                                </Trigger>

                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                                    <Setter Property="Visibility" TargetName="Border" Value="Collapsed"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
